plugins {
id "net.ltgt.apt-eclipse" version "0.21"
id "com.github.johnrengelman.shadow" version "5.0.0"
	id "application"
}

version "0.1"
group "com.hashimati.ahmed"
repositories {
	mavenCentral()
	maven { url "https://jcenter.bintray.com" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }

}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}
dependencies {
	annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
	implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
	testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
	implementation "io.micronaut:micronaut-http-client"
	testCompile "org.junit.jupiter:junit-jupiter-api"
	testRuntime "org.junit.jupiter:junit-jupiter-engine"
	testCompile "io.micronaut.test:micronaut-test-junit5"
	testAnnotationProcessor "io.micronaut:micronaut-inject-java"
	implementation "javax.annotation:javax.annotation-api"
	annotationProcessor "io.micronaut:micronaut-inject-java"
	annotationProcessor "io.micronaut:micronaut-validation"
	implementation "io.micronaut:micronaut-inject"
	implementation "io.micronaut:micronaut-validation"
	implementation "io.micronaut:micronaut-runtime"
	implementation "io.micronaut:micronaut-http-server-netty"
	runtimeOnly "ch.qos.logback:logback-classic:1.2.3"



	annotationProcessor 'io.micronaut.data:micronaut-data-processor:1.0.0.BUILD-SNAPSHOT'
	runtime 'io.micronaut.configuration:micronaut-jdbc-hikari'
	compile 'io.micronaut.data:micronaut-data-jdbc:1.0.0.BUILD-SNAPSHOT'
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.17'
	compileOnly 'jakarta.persistence:jakarta.persistence-api:2.2.2'
	runtime "io.micronaut.configuration:micronaut-jdbc-tomcat"

}
test.classpath += configurations.developmentOnly
mainClassName = "com.hashimati.ahmed.micronautdata.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
shadowJar {
    mergeServiceFiles()
}
run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')